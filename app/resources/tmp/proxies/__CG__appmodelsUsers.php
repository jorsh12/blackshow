<?php

namespace DoctrineProxies\__CG__\app\models;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Users extends \app\models\Users implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function & __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', array($name));

        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', array($name, $value));

        return parent::__set($name, $value);
    }

    /**
     * {@inheritDoc}
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', array($name));

        return parent::__isset($name);

    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'formFields', 'validates', '' . "\0" . 'app\\models\\Users' . "\0" . 'nombre', '' . "\0" . 'app\\models\\Users' . "\0" . 'apellidoPaterno', '' . "\0" . 'app\\models\\Users' . "\0" . 'apellidoMaterno', '_displayField', '_model', '_data', '_relationships', '_parent', '_errors', '_updated', '_increment', '_exists', '_schema', '_handlers', '_autoConfig', '_config', '_methodFilters');
        }

        return array('__isInitialized__', 'formFields', 'validates', '' . "\0" . 'app\\models\\Users' . "\0" . 'nombre', '' . "\0" . 'app\\models\\Users' . "\0" . 'apellidoPaterno', '' . "\0" . 'app\\models\\Users' . "\0" . 'apellidoMaterno', '_displayField', '_model', '_data', '_relationships', '_parent', '_errors', '_updated', '_increment', '_exists', '_schema', '_handlers', '_autoConfig', '_config', '_methodFilters');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Users $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setNombre($nombre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombre', array($nombre));

        return parent::setNombre($nombre);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombre', array());

        return parent::getNombre();
    }

    /**
     * {@inheritDoc}
     */
    public function setApellidoPaterno($apellidoPaterno)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApellidoPaterno', array($apellidoPaterno));

        return parent::setApellidoPaterno($apellidoPaterno);
    }

    /**
     * {@inheritDoc}
     */
    public function getApellidoPaterno()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApellidoPaterno', array());

        return parent::getApellidoPaterno();
    }

    /**
     * {@inheritDoc}
     */
    public function setApellidoMaterno($apellidoMaterno)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApellidoMaterno', array($apellidoMaterno));

        return parent::setApellidoMaterno($apellidoMaterno);
    }

    /**
     * {@inheritDoc}
     */
    public function getApellidoMaterno()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApellidoMaterno', array());

        return parent::getApellidoMaterno();
    }

    /**
     * {@inheritDoc}
     */
    public function getNombreCompleto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombreCompleto', array());

        return parent::getNombreCompleto();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLogin', array());

        return parent::getLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLogin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLogin', array());

        return parent::setLastLogin();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', array());

        return parent::setToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', array());

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setMustChangePassword($mustChangePassword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMustChangePassword', array($mustChangePassword));

        return parent::setMustChangePassword($mustChangePassword);
    }

    /**
     * {@inheritDoc}
     */
    public function getMustChangePassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMustChangePassword', array());

        return parent::getMustChangePassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailVerified($emailVerified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailVerified', array($emailVerified));

        return parent::setEmailVerified($emailVerified);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailVerified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailVerified', array());

        return parent::getEmailVerified();
    }

    /**
     * {@inheritDoc}
     */
    public function isActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isActive', array());

        return parent::isActive();
    }

    /**
     * {@inheritDoc}
     */
    public function mustChangePassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'mustChangePassword', array());

        return parent::mustChangePassword();
    }

    /**
     * {@inheritDoc}
     */
    public function isEmailVerified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEmailVerified', array());

        return parent::isEmailVerified();
    }

    /**
     * {@inheritDoc}
     */
    public function onPrePersist(\Doctrine\ORM\Event\LifecycleEventArgs $eventArgs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onPrePersist', array($eventArgs));

        return parent::onPrePersist($eventArgs);
    }

    /**
     * {@inheritDoc}
     */
    public function onPreUpdate(\Doctrine\ORM\Event\PreUpdateEventArgs $eventArgs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onPreUpdate', array($eventArgs));

        return parent::onPreUpdate($eventArgs);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', array());

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedFromIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedFromIp', array());

        return parent::getCreatedFromIp();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedFromIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedFromIp', array());

        return parent::getUpdatedFromIp();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedBy', array());

        return parent::getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeletedAt(\DateTime $deletedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeletedAt', array($deletedAt));

        return parent::setDeletedAt($deletedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeletedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeletedAt', array());

        return parent::getDeletedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', array());

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function preSoftDelete(\Doctrine\ORM\Event\LifecycleEventArgs $eventArgs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preSoftDelete', array($eventArgs));

        return parent::preSoftDelete($eventArgs);
    }

    /**
     * {@inheritDoc}
     */
    public function postSoftDelete(\Doctrine\ORM\Event\LifecycleEventArgs $eventArgs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'postSoftDelete', array($eventArgs));

        return parent::postSoftDelete($eventArgs);
    }

    /**
     * {@inheritDoc}
     */
    public function setIfEmpty(array $data, array $whitelist = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIfEmpty', array($data, $whitelist));

        return parent::setIfEmpty($data, $whitelist);
    }

    /**
     * {@inheritDoc}
     */
    public function formFields(array $whitelist = array (
), $binding = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'formFields', array($whitelist, $binding));

        return parent::formFields($whitelist, $binding);
    }

    /**
     * {@inheritDoc}
     */
    public function formatDate(\DateTime $date, $format = 'datetime')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'formatDate', array($date, $format));

        return parent::formatDate($date, $format);
    }

    /**
     * {@inheritDoc}
     */
    public function data($name = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'data', array($name));

        return parent::data($name);
    }

    /**
     * {@inheritDoc}
     */
    public function set(array $data, array $whitelist = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'set', array($data, $whitelist));

        return parent::set($data, $whitelist);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetExists($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetExists', array($offset));

        return parent::offsetExists($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetSet($offset, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetSet', array($offset, $value));

        return parent::offsetSet($offset, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetGet($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetGet', array($offset));

        return parent::offsetGet($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function offsetUnset($offset)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'offsetUnset', array($offset));

        return parent::offsetUnset($offset);
    }

    /**
     * {@inheritDoc}
     */
    public function addPropertyChangedListener(\Doctrine\Common\PropertyChangedListener $listener)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPropertyChangedListener', array($listener));

        return parent::addPropertyChangedListener($listener);
    }

    /**
     * {@inheritDoc}
     */
    public function onPostLoad(\Doctrine\ORM\Event\LifecycleEventArgs $eventArgs)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'onPostLoad', array($eventArgs));

        return parent::onPostLoad($eventArgs);
    }

    /**
     * {@inheritDoc}
     */
    public function validates(array $options = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'validates', array($options));

        return parent::validates($options);
    }

    /**
     * {@inheritDoc}
     */
    public function to($format, array $options = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'to', array($format, $options));

        return parent::to($format, $options);
    }

    /**
     * {@inheritDoc}
     */
    public function getRelationships()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelationships', array());

        return parent::getRelationships();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function save(array $data = array (
), array $whitelist = array (
), array $options = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', array($data, $whitelist, $options));

        return parent::save($data, $whitelist, $options);
    }

    /**
     * {@inheritDoc}
     */
    public function displayField()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'displayField', array());

        return parent::displayField();
    }

    /**
     * {@inheritDoc}
     */
    public function schema($field = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'schema', array($field));

        return parent::schema($field);
    }

    /**
     * {@inheritDoc}
     */
    public function __call($method, $params)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__call', array($method, $params));

        return parent::__call($method, $params);
    }

    /**
     * {@inheritDoc}
     */
    public function respondsTo($method, $internal = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'respondsTo', array($method, $internal));

        return parent::respondsTo($method, $internal);
    }

    /**
     * {@inheritDoc}
     */
    public function model()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'model', array());

        return parent::model();
    }

    /**
     * {@inheritDoc}
     */
    public function errors($field = NULL, $value = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'errors', array($field, $value));

        return parent::errors($field, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function exists()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'exists', array());

        return parent::exists();
    }

    /**
     * {@inheritDoc}
     */
    public function sync($id = NULL, array $data = array (
), array $options = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'sync', array($id, $data, $options));

        return parent::sync($id, $data, $options);
    }

    /**
     * {@inheritDoc}
     */
    public function increment($field, $value = 1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'increment', array($field, $value));

        return parent::increment($field, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function decrement($field, $value = 1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'decrement', array($field, $value));

        return parent::decrement($field, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function modified($field = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'modified', array($field));

        return parent::modified($field);
    }

    /**
     * {@inheritDoc}
     */
    public function export(array $options = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'export', array($options));

        return parent::export($options);
    }

    /**
     * {@inheritDoc}
     */
    public function assignTo($parent, array $config = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'assignTo', array($parent, $config));

        return parent::assignTo($parent, $config);
    }

    /**
     * {@inheritDoc}
     */
    public function applyFilter($method, $filter = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'applyFilter', array($method, $filter));

        return parent::applyFilter($method, $filter);
    }

    /**
     * {@inheritDoc}
     */
    public function invokeMethod($method, $params = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'invokeMethod', array($method, $params));

        return parent::invokeMethod($method, $params);
    }

}
